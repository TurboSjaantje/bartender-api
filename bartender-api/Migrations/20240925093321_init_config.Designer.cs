// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bartender_api.Data;

#nullable disable

namespace bartender_api.Migrations
{
    [DbContext(typeof(BartenderApiDbcontext))]
    [Migration("20240925093321_init_config")]
    partial class init_config
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrinkWithPercentageMocktailCombination", b =>
                {
                    b.Property<int>("DrinksId")
                        .HasColumnType("int");

                    b.Property<int>("MocktailCombinationsId")
                        .HasColumnType("int");

                    b.HasKey("DrinksId", "MocktailCombinationsId");

                    b.HasIndex("MocktailCombinationsId");

                    b.ToTable("DrinkWithPercentageMocktailCombination");
                });

            modelBuilder.Entity("bartender_api.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Drink1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Drink2Id")
                        .HasColumnType("int");

                    b.Property<int?>("Drink3Id")
                        .HasColumnType("int");

                    b.Property<int?>("Drink4Id")
                        .HasColumnType("int");

                    b.Property<int?>("Drink5Id")
                        .HasColumnType("int");

                    b.Property<int?>("Drink6Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Drink1Id");

                    b.HasIndex("Drink2Id");

                    b.HasIndex("Drink3Id");

                    b.HasIndex("Drink4Id");

                    b.HasIndex("Drink5Id");

                    b.HasIndex("Drink6Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("bartender_api.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Volume")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("bartender_api.Models.DrinkWithPercentage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.Property<float>("Percentage")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId");

                    b.ToTable("DrinkWithPercentages");
                });

            modelBuilder.Entity("bartender_api.Models.MocktailCombination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MocktailCombinations");
                });

            modelBuilder.Entity("bartender_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DrinkWithPercentageMocktailCombination", b =>
                {
                    b.HasOne("bartender_api.Models.DrinkWithPercentage", null)
                        .WithMany()
                        .HasForeignKey("DrinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bartender_api.Models.MocktailCombination", null)
                        .WithMany()
                        .HasForeignKey("MocktailCombinationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bartender_api.Models.Configuration", b =>
                {
                    b.HasOne("bartender_api.Models.Drink", "Drink1")
                        .WithMany()
                        .HasForeignKey("Drink1Id");

                    b.HasOne("bartender_api.Models.Drink", "Drink2")
                        .WithMany()
                        .HasForeignKey("Drink2Id");

                    b.HasOne("bartender_api.Models.Drink", "Drink3")
                        .WithMany()
                        .HasForeignKey("Drink3Id");

                    b.HasOne("bartender_api.Models.Drink", "Drink4")
                        .WithMany()
                        .HasForeignKey("Drink4Id");

                    b.HasOne("bartender_api.Models.Drink", "Drink5")
                        .WithMany()
                        .HasForeignKey("Drink5Id");

                    b.HasOne("bartender_api.Models.Drink", "Drink6")
                        .WithMany()
                        .HasForeignKey("Drink6Id");

                    b.Navigation("Drink1");

                    b.Navigation("Drink2");

                    b.Navigation("Drink3");

                    b.Navigation("Drink4");

                    b.Navigation("Drink5");

                    b.Navigation("Drink6");
                });

            modelBuilder.Entity("bartender_api.Models.DrinkWithPercentage", b =>
                {
                    b.HasOne("bartender_api.Models.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");
                });
#pragma warning restore 612, 618
        }
    }
}
